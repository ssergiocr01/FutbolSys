@model FutbolSys.Domain.Date

@{
    ViewBag.Title = "Torneo " + Model.Tournament.Name;
}

<h2>@ViewBag.Title</h2>
<h3>Fecha: @Model.Name</h3>

<p>
    @Html.ActionLink("Crear Partido", "CreateMatch", new { id = Model.DateId }, new { @class = "btn btn-primary" })
    @Html.ActionLink("Cancelar", "Details", new { id = Model.TournamentId }, new { @class = "btn btn-danger" })
</p>

@if (Model.Matches.Count == 0)
{
    <h4>No tiene equipos agregados</h4>
}
else
{
    <table class="table table-condensed table-hover table-striped" id="matchesTable">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Matches.FirstOrDefault().Status.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Matches.FirstOrDefault().TournamentGroup.Name)
            </th>
            <th>
                Local
            </th>
            <th>
                Goles
            </th>
            <th>
                Visitante
            </th>
            <th>
                Goles
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Matches.FirstOrDefault().DateTime)
            </th>
            <th>
                Opciones
            </th>
        </tr>

        @foreach (var item in Model.Matches.OrderBy(m => m.DateTime))
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Status.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TournamentGroup.Name)
                </td>
                <td width="100px" style="text-align:center;">
                    @if (!string.IsNullOrEmpty(item.Local.Logo))
                    {
                        <img src="@Url.Content(item.Local.Logo)" alt="Logo" style="width:65px;height:65px;max-width:100%; height:100%" />
                    }
                    @Html.DisplayFor(modelItem => item.Local.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LocalGoals)
                </td>
                <td width="100px" style="text-align:center;">
                    @if (!string.IsNullOrEmpty(item.Visitor.Logo))
                    {
                        <img src="@Url.Content(item.Visitor.Logo)" alt="Logo" style="width:65px;height:65px;max-width:100%; height:100%" />
                    }
                    @Html.DisplayFor(modelItem => item.Visitor.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VisitorGoals)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateTime)
                </td>
                <td>
                    @Html.ActionLink("Editar", "EditMatch", new { id = item.MatchId }, new { @class = "btn btn-warning" })
                    @Html.ActionLink("Predicción", "Predictions", new { id = item.MatchId }, new { @class = "btn btn-info" })                    
                    @Html.ActionLink("Eliminar", "DeleteMatch", new { id = item.MatchId }, new { @class = "btn btn-danger", onclick = "return confirm('Está seguro(a) de eliminar este registro')" })
                </td>
            </tr>
        }

    </table>
}

@section Scripts{
    <script>
        $(document).ready(function () {
            $('#matchesTable').DataTable({
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                }
            });
        });
    </script>
}


