@model FutbolSys.Domain.Group

@{
    ViewBag.Title = "Grupos";
}


<div class="row">
    <div class="col-md-6">
        <h2>Usuario: @Model.Owner.FullName</h2>
        <h3>Grupos: @Model.Name</h3>
    </div>
    <div class="col-md-6">
        <br />
        @if (!string.IsNullOrEmpty(Model.Logo))
        {
            <img src="@Url.Content(Model.Logo)" alt="Image" style="width:200px;height:200px;max-width: 100%; height: auto;" />
        }
    </div>
</div>


<p>
    @Html.ActionLink("Agregar Usuario", "AddUser", new { id = Model.GroupId }, new { @class = "btn btn-primary" })
    @Html.ActionLink("Cancelar", "Details", new { id = Model.Owner.UserId }, new { @class = "btn btn-danger" })
</p>

@if (Model.GroupUsers.Count == 0)
{
    <h4>No existen usuarios agregados</h4>
}
else
{
    <table class="table table-condensed table-hover table-striped" id="usersTable">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.GroupUsers.FirstOrDefault().User.Picture)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.GroupUsers.FirstOrDefault().User.FullName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.GroupUsers.FirstOrDefault().IsAccepted)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.GroupUsers.FirstOrDefault().IsBlocked)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.GroupUsers.FirstOrDefault().Points)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.GroupUsers.OrderByDescending(gu => gu.Points))
            {
                <tr>
                    <td>
                        @if (!string.IsNullOrEmpty(item.User.Picture))
                        {
                            <img src="@Url.Content(item.User.Picture)" alt="Image" style="width:80px;height:80px;max-width: 100%; height: auto;" />
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.User.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsAccepted)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsBlocked)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Points)
                    </td>
                    <td>
                        @Html.ActionLink("Editar", "EditUser", new { id = item.GroupUserId }, new { @class = "btn btn-warning" })
                        @Html.ActionLink("Eliminar", "DeleteUser", new { id = item.GroupUserId }, new { @class = "btn btn-danger", onclick = "return confirm('¿Está seguro(a) de querer eliminar este registro?');" })
                    </td>
                </tr>
            }
        </tbody>


    </table>
}

@section Scripts{

    <script src="~/Content/DataTable/datatables.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#usersTable').DataTable({
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                }
            });
        });
    </script>
}

