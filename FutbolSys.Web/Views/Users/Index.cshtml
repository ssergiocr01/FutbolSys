@model IEnumerable<FutbolSys.Domain.User>

@{
    ViewBag.Title = "Lista de Usuarios";
}

<h2>@ViewBag.Title</h2>

<p>
    @Html.ActionLink("Crear Usuario", "Create", new { }, new { @class = "btn btn-primary" })
</p>
<table class="table table-condensed table-hover table-striped" id="usersTable">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().FavoriteTeam.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().UserType.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Picture)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Nickname)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Points)
            </th>
            <th>
                # Groups
            </th>
            <th>
                Opciones
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @if (!string.IsNullOrEmpty(item.FavoriteTeam.Logo))
                    {
                        <img src="@Url.Content(item.FavoriteTeam.Logo)" alt="Image" style="width:60px;height:60px;max-width: 100%; height: auto;" />
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserType.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FullName)
                </td>
                <td>
                    @if (!string.IsNullOrEmpty(item.Picture))
                    {
                        <img src="@Url.Content(item.Picture)" alt="Imagen" style="width:100px;height:100px;max-width: 100%; height: auto;" />
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Nickname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Points)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserGroups.Count)
                </td>
                <td>
                    @Html.ActionLink("Editar", "Edit", new { id = item.UserId }, new { @class = "btn btn-warning" })
                    @Html.ActionLink("Detalles", "Details", new { id = item.UserId }, new { @class = "btn btn-info" })
                    @Html.ActionLink("Eliminar", "Delete", new { id = item.UserId }, new { @class = "btn btn-danger", onclick = "return confirm('¿Está seguro(a) de querer eliminar este registro?');" })
                </td>
            </tr>
        }
    </tbody>

</table>

@section Scripts{

    <script src="~/Content/DataTable/datatables.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#usersTable').DataTable({
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                }
            });
        });
    </script>
}

