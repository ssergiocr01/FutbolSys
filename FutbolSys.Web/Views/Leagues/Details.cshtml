@model FutbolSys.Domain.League

@{
    ViewBag.Title = "Detalles de la Liga " + Model.Name;
}

<h2>@ViewBag.Title</h2>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Logo)
        </dt>

        <dd>
            @if (!string.IsNullOrEmpty(Model.Logo))
            {
                <img src="@Url.Content(Model.Logo)" alt="Logo" style="width:100px;height:100px;max-width:100%; height:100%" />
            }
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Editar", "Edit", new { id = Model.LeagueId }, new { @class = "btn btn-warning" })
    @Html.ActionLink("Crear Equipo", "CreateTeam", new { id = Model.LeagueId }, new { @class = "btn btn-primary" })
    @Html.ActionLink("Cancelar", "Index", new { }, new { @class = "btn btn-danger" })
</p>

<h4>Equipos</h4>

@if (Model.Teams.Count == 0)
{
    <h5>No tiene equipos registrados todavía</h5>
}
else
{
    <table class="table table-condensed table-hover table-striped" id="teamsTable">
        <thead>
            <tr>                
                <th>
                    @Html.DisplayNameFor(model => model.Teams.FirstOrDefault().Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Teams.FirstOrDefault().Logo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Teams.FirstOrDefault().Initials)
                </th>
                <th>Opciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Teams.OrderBy(t => t.Name))
            {
                <tr>                    
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @if (!string.IsNullOrEmpty(item.Logo))
                        {
                            <img src="@Url.Content(item.Logo)" alt="Logo" style="width:80px;height:80px;max-width:100%; height:100%" />
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Initials)
                    </td>
                    <td>
                        @Html.ActionLink("Editar", "EditTeam", new { id = item.TeamId }, new { @class = "btn btn-warning" })
                        @Html.ActionLink("Detalles", "DetailsTeam", new { id = item.TeamId }, new { @class = "btn btn-info" })
                        @Html.ActionLink("Eliminar", "DeleteTeam", new { id = item.TeamId }, new { @class = "btn btn-danger", onclick = "return confirm('Está seguro(a) de eliminar este registro')" })
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@section Scripts{

    <script src="~/Content/DataTable/datatables.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#teamsTable').DataTable({
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                }
            });
        });
    </script>
}
